http://localhost:3000/

100

96

96

100

Performance

Accessibility

Best
Practices

SEO

100
Performance
Values are estimated and may vary. The performance score is calculated
directly from these metrics. See calculator.
0–49

50–89

90–100

METRICS

Expand view

First Contentful Paint

Largest Contentful Paint

0.4 s

0.5 s

Total Blocking Time

Cumulative Layout Shift

0 ms

0.001

Speed Index

0.6 s
View Treemap

Later this year, insights will replace performance audits. Learn more and provide feedback

Try insights

here.

Show audits relevant to:

All

FCP

LCP

Minifying JavaScript files can reduce payload sizes and script parse time. Learn how to minify JavaScript. FCP

LCP

TBT

CLS

DIAGNOSTICS
Minify JavaScript — Est savings of 258 KiB

Show 3rd-party resources (13)
Transfer

Est

Size

Savings

localhost 1st Party

478.6 KiB

147.3 KiB

…chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhost)

193.0 KiB

56.8 KiB

…chunks/25a64_next_dist_client_5a7dfb24._.js (localhost)

169.8 KiB

50.9 KiB

…chunks/node_modules__pnpm_c0736287._.js (localhost)

53.6 KiB

17.2 KiB

…chunks/_9e0c23ab._.js (localhost)

15.8 KiB

7.7 KiB

…chunks/node_modules__pnpm_f68b16af._.js (localhost)

20.8 KiB

6.8 KiB

…chunks/25a64_next_dist_881a9ee6._.js (localhost)

17.7 KiB

5.0 KiB

URL

Transfer

Est

Size

Savings

7.9 KiB

3.0 KiB

136.5 KiB

60.5 KiB

103.0 KiB

44.6 KiB

chrome-extension://ejehbnopfianpiojbpjlkjlgaipjhmdo/js/contentscript.js

14.7 KiB

7.7 KiB

chrome-extension://nngceckbapebfimnlniiiahkandclblb/content/fido2-content-script.js

9.6 KiB

4.4 KiB

chrome-extension://nngceckbapebfimnlniiiahkandclblb/content/fido2-page-script.js

9.3 KiB

3.8 KiB

110.4 KiB

49.7 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/action-handler.js

12.8 KiB

6.4 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/video-controller.js

14.0 KiB

6.1 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/content/inject.js

12.8 KiB

5.4 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/observers/media-observer.js

8.7 KiB

4.2 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/debug-helper.js

12.4 KiB

4.1 KiB

8.4 KiB

4.1 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/dom-utils.js

6.9 KiB

3.6 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/settings.js

8.4 KiB

3.6 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/event-manager.js

7.4 KiB

3.3 KiB

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/storage-manager.js

5.1 KiB

2.6 KiB

3.9 KiB

2.1 KiB

6.4 KiB

2.1 KiB

URL

…chunks/src_components_a9cdd32f._.js (localhost)

Unattributable
chrome-extension://nngceckbapebfimnlniiiahkandclblb/content/bootstrap-autofilloverlay-notifications.js

Video Speed Controller Chrome Extension

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/observers/mutationobserver.js

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/site-handlers/facebookhandler.js

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/ui/shadow-dom.js

URL

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/site-handlers/youtubehandler.js

Transfer

Est

Size

Savings

3.2 KiB

2.0 KiB

Page prevented back/forward cache restoration — 3 failure reasons
Many navigations are performed by going back to a previous page, or forwards again. The back/forward cache (bfcache) can
speed up these return navigations. Learn more about the bfcache

Failure reason

Failure type

Pages with WebSocket cannot enter back/forward cache.

Pending browser support

http://localhost:3000
Pages whose main resource has cache-control:no-store cannot enter back/forward cache.

Not actionable

http://localhost:3000
Back/forward cache is disabled because WebSocket has been used.

Not actionable

http://localhost:3000

Serve static assets with an efficient cache policy — 2 resources found
A long cache lifetime can speed up repeat visits to your page. Learn more about efficient cache policies.

URL

Cache TTL

vercel-scripts.com

Transfer
Size

6 KiB

…speed-insights/script.debug.js (va.vercel-scripts.com)

31d

5 KiB

/v1/script.debug.js (va.vercel-scripts.com)

31d

2 KiB

Avoid serving legacy JavaScript to modern browsers — Est savings of 18 KiB
Polyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren't necessary for modern
browsers. Consider modifying your JavaScript build process to not transpile Baseline features, unless you know you must

support legacy browsers. Learn why most sites can deploy ES6+ code without transpiling FCP

LCP

Est

URL

Savings

Unattributable

9.8 KiB

chrome-

9.2 KiB

extension://nkbihfbeogaeaoehlefnkodbefgpgknn/scripts/lockdowninstall.js

lockdown-install.js:1

Object.isExtensible

lockdown-install.js:1

Object.isFrozen

lockdown-install.js:1

Object.isSealed

lockdown-install.js:1

Reflect.isExtensible

chrome-

0.3 KiB

extension://nkbihfbeogaeaoehlefnkodbefgpgknn/scripts/inpage.js

inpage.js:12

@babel/plugin-transformclasses

chrome-

0.3 KiB

extension://nkbihfbeogaeaoehlefnkodbefgpgknn/scripts/contentscript.
js

contentscript.js:55

@babel/plugin-transformclasses

localhost 1st Party

7.7 KiB

…chunks/25a64_next_dist_881a9ee6._.js (localhost)

7.5 KiB

25a64_next_dist_881a9ee6._.js:41

Array.prototype.at

25a64_next_dist_881a9ee6._.js:21

Array.prototype.flat

25a64_next_dist_881a9ee6._.js:23

Array.prototype.flatMap

25a64_next_dist_881a9ee6._.js:37

Object.fromEntries

25a64_next_dist_881a9ee6._.js:44

Object.hasOwn

25a64_next_dist_881a9ee6._.js:15

String.prototype.trimEnd

25a64_next_dist_881a9ee6._.js:15

String.prototype.trimStar
t

…chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhost)

0.2 KiB

Est

URL

Savings

25a64_next_dist_comp…f93ea3b1._.js:18309

@babel/plugin-transformclasses

Reduce unused JavaScript — Est savings of 478 KiB
Reduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity.
Learn how to reduce unused JavaScript. FCP

LCP

Transfer

Est

Size

Savings

721.6 KiB

345.4 KiB

chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/scripts/contentscript.js

524.4 KiB

259.4 KiB

chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/scripts/inpage.js

94.2 KiB

45.8 KiB

103.0 KiB

40.2 KiB

localhost 1st Party

362.8 KiB

132.3 KiB

…chunks/25a64_next_dist_client_5a7dfb24._.js (localhost)

169.8 KiB

66.6 KiB

…chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhost)

193.0 KiB

65.7 KiB

URL

Unattributable

chrome-extension://nngceckbapebfimnlniiiahkandclblb/content/bootstrap-autofilloverlay-notifications.js

Avoid large layout shifts — 1 layout shift found
These are the largest layout shifts observed on the page. Each table item represents a single layout shift, and shows the
element that shifted the most. Below each item are possible root causes that led to the layout shift. Some of these layout
shifts may not be included in the CLS metric value due to windowing. Learn how to improve CLS CLS

Element

Layout shift score
span.inline-block.px-4.py-2.rounded-full.font-semibold
0.001

Avoid non-composited animations — 2 animated elements found
Animations which are not composited can be janky and increase CLS. Learn how to avoid non-composited animations CLS

Element

Name

path.paused
Unsupported CSS Property: stroke-dashoffset

draw1

path.paused

Unsupported CSS Property: stroke-dashoffset

draw0

Minimize third-party usage — Third-party code blocked the main thread for 0 ms
Third-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to
load third-party code after your page has primarily finished loading. Learn how to minimize third-party impact. TBT

Third-Party

Video Speed Controller Chrome Extension
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/videocontroller.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/content/inject.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/actionhandler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/debughelper.js

Transfer

Main-Thread

Size

Blocking Time

137 KiB

0 ms

14 KiB

0 ms

13 KiB

0 ms

13 KiB

0 ms

12 KiB

0 ms

Transfer

Main-Thread

Size

Blocking Time

9 KiB

0 ms

8 KiB

0 ms

8 KiB

0 ms

7 KiB

0 ms

7 KiB

0 ms

6 KiB

0 ms

5 KiB

0 ms

4 KiB

0 ms

4 KiB

0 ms

3 KiB

0 ms

3 KiB

0 ms

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/ui/controls.js

3 KiB

0 ms

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/styles/inject.css

3 KiB

0 ms

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/logger.js

3 KiB

0 ms

3 KiB

0 ms

2 KiB

0 ms

2 KiB

0 ms

2 KiB

0 ms

2 KiB

0 ms

vercel-scripts.com

6 KiB

0 ms

…speed-insights/script.debug.js (va.vercel-scripts.com)

5 KiB

0 ms

Third-Party

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/observers/mediaobserver.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/settings.js
chromeextension://nffaoalbilbmmfgbnbgppjihopabppdk/src/observers/mutationobserver.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/eventmanager.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/domutils.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/ui/shadow-dom.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/core/storagemanager.js
chromeextension://nffaoalbilbmmfgbnbgppjihopabppdk/src/utils/constants.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/facebook-handler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/index.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/youtube-handler.js

chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/netflix-handler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/base-handler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/amazon-handler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/ui/draghandler.js
chrome-extension://nffaoalbilbmmfgbnbgppjihopabppdk/src/sitehandlers/apple-handler.js

Third-Party

/v1/script.debug.js (va.vercel-scripts.com)

Transfer

Main-Thread

Size

Blocking Time

2 KiB

0 ms

Largest Contentful Paint element — 530 ms
This is the largest contentful element painted within the viewport. Learn more about the Largest Contentful Paint element
LCP

Element
p.text-xl.mb-6

Phase

% of LCP

Timing

TTFB

55%

290 ms

Load Delay

0%

0 ms

Load Time

0%

0 ms

Render Delay

45%

240 ms

Avoid long main-thread tasks — 1 long task found
Lists the longest tasks on the main thread, useful for identifying worst contributors to input delay. Learn how to avoid long
main-thread tasks TBT

URL

Start Time

localhost 1st Party
http://localhost:3000

Duration

213 ms
232 ms

213 ms

More information about the performance of your application. These numbers don't directly affect the Performance score.

PASSED AUDITS (28)

Hide

Eliminate render-blocking resources
Resources are blocking the first paint of your page. Consider delivering critical JS/CSS inline and deferring all non-critical
JS/styles. Learn how to eliminate render-blocking resources. FCP

LCP

Properly size images
Serve images that are appropriately-sized to save cellular data and improve load time. Learn how to size images. FCP

LCP

Defer offscreen images
Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to
interactive. Learn how to defer offscreen images. FCP

LCP

Minify CSS
Minifying CSS files can reduce network payload sizes. Learn how to minify CSS. FCP

LCP

Reduce unused CSS
Reduce unused rules from stylesheets and defer CSS not used for above-the-fold content to decrease bytes consumed by
network activity. Learn how to reduce unused CSS. FCP

LCP

Efficiently encode images
Optimized images load faster and consume less cellular data. Learn how to efficiently encode images. FCP

LCP

Serve images in next-gen formats
Image formats like WebP and AVIF often provide better compression than PNG or JPEG, which means faster downloads and
less data consumption. Learn more about modern image formats. FCP

LCP

Enable text compression
Text-based resources should be served with compression (gzip, deflate or brotli) to minimize total network bytes. Learn more
about text compression. FCP

LCP

Preconnect to required origins

Consider adding preconnect or dns-prefetch resource hints to establish early connections to important third-party
origins. Learn how to preconnect to required origins. LCP

FCP

Initial server response time was short — Root document took 290 ms
Keep the server response time for the main document short because all other requests depend on it. Learn more about the
Time to First Byte metric. FCP

LCP

URL

Time Spent

localhost 1st Party

290 ms

http://localhost:3000

290 ms

Avoid multiple page redirects
Redirects introduce additional delays before the page can be loaded. Learn how to avoid page redirects. LCP

FCP

Use HTTP/2
HTTP/2 offers many benefits over HTTP/1.1, including binary headers and multiplexing. Learn more about HTTP/2. LCP
FCP

Use video formats for animated content
Large GIFs are inefficient for delivering animated content. Consider using MPEG4/WebM videos for animations and
PNG/WebP for static images instead of GIF to save network bytes. Learn more about efficient video formats FCP

LCP

Remove duplicate modules in JavaScript bundles
Remove large, duplicate JavaScript modules from bundles to reduce unnecessary bytes consumed by network activity. FCP
LCP

Preload Largest Contentful Paint image
If the LCP element is dynamically added to the page, you should preload the image in order to improve LCP. Learn more
about preloading LCP elements. LCP

Avoids enormous network payloads — Total size was 602 KiB
Large network payloads cost users real money and are highly correlated with long load times. Learn how to reduce payload

sizes.

Transfer

URL

Size

localhost 1st Party

565.7 KiB

…chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhost)

193.6 KiB

…chunks/25a64_next_dist_client_5a7dfb24._.js (localhost)

170.5 KiB

…chunks/node_modules__pnpm_c0736287._.js (localhost)

54.2 KiB

…media/or3nQ6H_1….p.be19f591.woff2 (localhost)

31.1 KiB

…media/gyByhwUxI….p.da1ebef7.woff2 (localhost)

28.2 KiB

http://localhost:3000

23.4 KiB

…chunks/node_modules__pnpm_f68b16af._.js (localhost)

21.5 KiB

…chunks/25a64_next_dist_881a9ee6._.js (localhost)

18.3 KiB

…chunks/_9e0c23ab._.js (localhost)

16.4 KiB

…chunks/src_components_a9cdd32f._.js (localhost)

8.5 KiB

Avoids an excessive DOM size — 574 elements
A large DOM will increase memory usage, cause longer style calculations, and produce costly layout reflows. Learn how to
avoid an excessive DOM size. TBT

Statistic

Element

Value

Total DOM Elements

574
img.object-cover

Maximum DOM Depth

14

Statistic

Element

Maximum Child Elements

Value
div

60

Avoid chaining critical requests
The Critical Request Chains below show you what resources are loaded with a high priority. Consider reducing the length of
chains, reducing the download size of resources, or deferring the download of unnecessary resources to improve page load.
Learn how to avoid chaining critical requests.
Maximum critical path latency: 299.3 ms
Initial Navigation
http://localhost:3000 - 299.3 ms, 23.42 KiB

User Timing marks and measures
Consider instrumenting your app with the User Timing API to measure your app's real-world performance during key user
experiences. Learn more about User Timing marks.

JavaScript execution time — 0.4 s
Consider reducing the time spent parsing, compiling, and executing JS. You may find delivering smaller JS payloads helps
with this. Learn how to reduce Javascript execution time. TBT

URL

Total CPU
Time

Script Evaluation

Script Parse

localhost 1st Party

569 ms

312 ms

79 ms

http://localhost:3000

385 ms

150 ms

65 ms

…chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhost)

184 ms

162 ms

14 ms

Unattributable

56 ms

1 ms

0 ms

Unattributable

56 ms

1 ms

0 ms

Minimizes main-thread work — 0.7 s
Consider reducing the time spent parsing, compiling and executing JS. You may find delivering smaller JS payloads helps
with this. Learn how to minimize main-thread work TBT

Category

Time Spent

Script Evaluation

356 ms

Script Parsing & Compilation

115 ms

Other

102 ms

Style & Layout

66 ms

Rendering

44 ms

Parse HTML & CSS

20 ms

Garbage Collection

14 ms

All text remains visible during webfont loads
Leverage the font-display CSS feature to ensure text is user-visible while webfonts are loading. Learn more about fontdisplay.

Lazy load third-party resources with facades
Some third-party embeds can be lazy loaded. Consider replacing them with a facade until they are required. Learn how to
defer third-parties with a facade. TBT

Largest Contentful Paint image was not lazily loaded
Above-the-fold images that are lazily loaded render later in the page lifecycle, which can delay the largest contentful paint.
Learn more about optimal lazy loading. LCP

Uses passive listeners to improve scrolling performance
Consider marking your touch and wheel event listeners as passive to improve your page's scroll performance. Learn more
about adopting passive event listeners.

Avoids document.write()
For users on slow connections, external scripts dynamically injected via document.write() can delay page load by tens of
seconds. Learn how to avoid document.write().

Image elements have explicit width and height
Set an explicit width and height on image elements to reduce layout shifts and improve CLS. Learn how to set image
dimensions CLS

Has a <meta name="viewport"> tag with width or initial-scale
A <meta name="viewport"> not only optimizes your app for mobile screen sizes, but also prevents a 300 millisecond delay
to user input. Learn more about using the viewport meta tag.

96
Accessibility
These checks highlight opportunities to improve the accessibility of your
web app. Automatic detection can only detect a subset of issues and does
not guarantee the accessibility of your web app, so manual testing is also
encouraged.
CONTRAST
Background and foreground colors do not have a sufficient contrast ratio.
Low-contrast text is difficult or impossible for many users to read. Learn how to provide sufficient color contrast.

Failing Elements
h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

p.text-xs.text-gray-400

Failing Elements
a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

div.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

div.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

div.text-xs.text-gray-400

Failing Elements

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

div.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

div.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

a.button-primary

Failing Elements

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

p.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

p.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

Failing Elements
h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

p.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

p.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

h3.text-white.font-semibold.text-sm.truncate

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

Failing Elements

p.text-xs.text-gray-400

a.block.bg-gray-700.rounded-lg.p-3.hover:bg-gray-600.transition-colors

th.px-4.py-3.w-28

thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

th.px-4.py-3.w-24

thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

th.px-4.py-3

thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

th.px-4.py-3.w-48

Failing Elements
thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

th.px-4.py-3.w-32

thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

th.px-4.py-3.w-20

thead.text-xs.text-gray-400.uppercase.bg-gray-700.sticky.top-0.z-10

button.px-6.py-3.bg-green-600.hover:bg-green-700.text-white.rounded-lg.font-medium.transition-col…
input.flex-1.px-4.py-3.rounded-lg

button.button-primary

These are opportunities to improve the legibility of your content.
ADDITIONAL ITEMS TO MANUALLY CHECK (10)

Hide

Interactive controls are keyboard focusable
Custom interactive controls are keyboard focusable and display a focus indicator. Learn how to make custom controls
focusable.

Interactive elements indicate their purpose and state
Interactive elements, such as links and buttons, should indicate their state and be distinguishable from non-interactive
elements. Learn how to decorate interactive elements with affordance hints.

The page has a logical tab order
Tabbing through the page follows the visual layout. Users cannot focus elements that are offscreen. Learn more about logical
tab ordering.

Visual order on the page follows DOM order
DOM order matches the visual order, improving navigation for assistive technology. Learn more about DOM and visual
ordering.

User focus is not accidentally trapped in a region
A user can tab into and out of any control or region without accidentally trapping their focus. Learn how to avoid focus
traps.

The user's focus is directed to new content added to the page
If new content, such as a dialog, is added to the page, the user's focus is directed to it. Learn how to direct focus to new
content.

HTML5 landmark elements are used to improve navigation
Landmark elements (<main>, <nav>, etc.) are used to improve the keyboard navigation of the page for assistive technology.
Learn more about landmark elements.

Offscreen content is hidden from assistive technology
Offscreen content is hidden with display: none or aria-hidden=true. Learn how to properly hide offscreen content.

Custom controls have associated labels

Custom interactive controls have associated labels, provided by aria-label or aria-labelledby. Learn more about custom
controls and labels.

Custom controls have ARIA roles
Custom interactive controls have appropriate ARIA roles. Learn how to add roles to custom controls.

These items address areas which an automated testing tool cannot cover. Learn more in our guide on conducting an accessibility
review.

PASSED AUDITS (25)

Hide

[aria-*] attributes match their roles

Each ARIA role supports a specific subset of aria-* attributes. Mismatching these invalidates the aria-* attributes. Learn
how to match ARIA attributes to their roles.

[aria-hidden="true"] is not present on the document <body>

Assistive technologies, like screen readers, work inconsistently when aria-hidden="true" is set on the document <body>.
Learn how aria-hidden affects the document body.

[role]s have all required [aria-*] attributes

Some ARIA roles have required attributes that describe the state of the element to screen readers. Learn more about roles
and required attributes.

[aria-*] attributes have valid values

Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid values. Learn more about valid values
for ARIA attributes.

[aria-*] attributes are valid and not misspelled

Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid names. Learn more about valid ARIA
attributes.

Buttons have an accessible name
When a button doesn't have an accessible name, screen readers announce it as "button", making it unusable for users who
rely on screen readers. Learn how to make buttons more accessible.

Image elements have [alt] attributes
Informative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt
attribute. Learn more about the alt attribute.

[user-scalable="no"] is not used in the <meta name="viewport"> element and the [maximum-scale] attribute is not less

than 5.
Disabling zooming is problematic for users with low vision who rely on screen magnification to properly see the contents of
a web page. Learn more about the viewport meta tag.

ARIA attributes are used as specified for the element's role
Some ARIA attributes are only allowed on an element under certain conditions. Learn more about conditional ARIA
attributes.

[aria-hidden="true"] elements do not contain focusable descendents

Focusable descendents within an [aria-hidden="true"] element prevent those interactive elements from being available
to users of assistive technologies like screen readers. Learn how aria-hidden affects focusable elements.

Elements use only permitted ARIA attributes
Using ARIA attributes in roles where they are prohibited can mean that important information is not communicated to users
of assistive technologies. Learn more about prohibited ARIA roles.

[role] values are valid

ARIA roles must have valid values in order to perform their intended accessibility functions. Learn more about valid ARIA
roles.

Document has a <title> element
The title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page
is relevant to their search. Learn more about document titles.

<html> element has a [lang] attribute

If a page doesn't specify a lang attribute, a screen reader assumes that the page is in the default language that the user
chose when setting up the screen reader. If the page isn't actually in the default language, then the screen reader might not
announce the page's text correctly. Learn more about the lang attribute.

<html> element has a valid value for its [lang] attribute

Specifying a valid BCP 47 language helps screen readers announce text properly. Learn how to use the lang attribute.

Form elements have associated labels
Labels ensure that form controls are announced properly by assistive technologies, like screen readers. Learn more about
form element labels.

Links are distinguishable without relying on color.
Low-contrast text is difficult or impossible for many users to read. Link text that is discernible improves the experience for
users with low vision. Learn how to make links distinguishable.

Links have a discernible name
Link text (and alternate text for images, when used as links) that is discernible, unique, and focusable improves the
navigation experience for screen reader users. Learn how to make links accessible.

Touch targets have sufficient size and spacing.
Touch targets with sufficient size and spacing help users who may have difficulty targeting small controls to activate the
targets. Learn more about touch targets.

Cells in a <table> element that use the [headers] attribute refer to table cells within the same table.
Screen readers have features to make navigating tables easier. Ensuring <td> cells using the [headers] attribute only refer
to other cells in the same table may improve the experience for screen reader users. Learn more about the headers
attribute.

Heading elements appear in a sequentially-descending order
Properly ordered headings that do not skip levels convey the semantic structure of the page, making it easier to navigate
and understand when using assistive technologies. Learn more about heading order.

Uses ARIA roles only on compatible elements
Many HTML elements can only be assigned certain ARIA roles. Using ARIA roles where they are not allowed can interfere
with the accessibility of the web page. Learn more about ARIA roles.

Deprecated ARIA roles were not used

Deprecated ARIA roles may not be processed correctly by assistive technology. Learn more about deprecated ARIA roles.

Image elements do not have [alt] attributes that are redundant text.
Informative elements should aim for short, descriptive alternative text. Alternative text that is exactly the same as the text
adjacent to the link or image is potentially confusing for screen reader users, because the text will be read twice. Learn more
about the alt attribute.

Tables have different content in the summary attribute and <caption>.
The summary attribute should describe the table structure, while <caption> should have the onscreen title. Accurate table
mark-up helps users of screen readers. Learn more about summary and caption.

NOT APPLICABLE (31)

Hide

[accesskey] values are unique

Access keys let users quickly focus a part of the page. For proper navigation, each access key must be unique. Learn more
about access keys.

button, link, and menuitem elements have accessible names

When an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for
users who rely on screen readers. Learn how to make command elements more accessible.

Elements with role="dialog" or role="alertdialog" have accessible names.
ARIA dialog elements without accessible names may prevent screen readers users from discerning the purpose of these
elements. Learn how to make ARIA dialog elements more accessible.

ARIA input fields have accessible names
When an input field doesn't have an accessible name, screen readers announce it with a generic name, making it unusable
for users who rely on screen readers. Learn more about input field labels.

ARIA meter elements have accessible names
When a meter element doesn't have an accessible name, screen readers announce it with a generic name, making it
unusable for users who rely on screen readers. Learn how to name meter elements.

ARIA progressbar elements have accessible names
When a progressbar element doesn't have an accessible name, screen readers announce it with a generic name, making it
unusable for users who rely on screen readers. Learn how to label progressbar elements.

Elements with an ARIA [role] that require children to contain a specific [role] have all required children.
Some ARIA parent roles must contain specific child roles to perform their intended accessibility functions. Learn more about
roles and required children elements.

[role]s are contained by their required parent element

Some ARIA child roles must be contained by specific parent roles to properly perform their intended accessibility functions.
Learn more about ARIA roles and required parent element.

Elements with the role=text attribute do not have focusable descendents.
Adding role=text around a text node split by markup enables VoiceOver to treat it as one phrase, but the element's
focusable descendents will not be announced. Learn more about the role=text attribute.

ARIA toggle fields have accessible names
When a toggle field doesn't have an accessible name, screen readers announce it with a generic name, making it unusable
for users who rely on screen readers. Learn more about toggle fields.

ARIA tooltip elements have accessible names
When a tooltip element doesn't have an accessible name, screen readers announce it with a generic name, making it
unusable for users who rely on screen readers. Learn how to name tooltip elements.

ARIA treeitem elements have accessible names
When a treeitem element doesn't have an accessible name, screen readers announce it with a generic name, making it
unusable for users who rely on screen readers. Learn more about labeling treeitem elements.

The page contains a heading, skip link, or landmark region
Adding ways to bypass repetitive content lets keyboard users navigate the page more efficiently. Learn more about bypass
blocks.

<dl>'s contain only properly-ordered <dt> and <dd> groups, <script>, <template> or <div> elements.

When definition lists are not properly marked up, screen readers may produce confusing or inaccurate output. Learn how to
structure definition lists correctly.

Definition list items are wrapped in <dl> elements
Definition list items (<dt> and <dd>) must be wrapped in a parent <dl> element to ensure that screen readers can properly
announce them. Learn how to structure definition lists correctly.

ARIA IDs are unique
The value of an ARIA ID must be unique to prevent other instances from being overlooked by assistive technologies. Learn
how to fix duplicate ARIA IDs.

No form fields have multiple labels
Form fields with multiple labels can be confusingly announced by assistive technologies like screen readers which use either
the first, the last, or all of the labels. Learn how to use form labels.

<frame> or <iframe> elements have a title

Screen reader users rely on frame titles to describe the contents of frames. Learn more about frame titles.

<html> element has an [xml:lang] attribute with the same base language as the [lang] attribute.

If the webpage does not specify a consistent language, then the screen reader might not announce the page's text correctly.
Learn more about the lang attribute.

Input buttons have discernible text.
Adding discernable and accessible text to input buttons may help screen reader users understand the purpose of the input
button. Learn more about input buttons.

<input type="image"> elements have [alt] text

When an image is being used as an <input> button, providing alternative text can help screen reader users understand the
purpose of the button. Learn about input image alt text.

Lists contain only <li> elements and script supporting elements (<script> and <template>).
Screen readers have a specific way of announcing lists. Ensuring proper list structure aids screen reader output. Learn more
about proper list structure.

List items (<li>) are contained within <ul>, <ol> or <menu> parent elements
Screen readers require list items (<li>) to be contained within a parent <ul>, <ol> or <menu> to be announced properly.
Learn more about proper list structure.

The document does not use <meta http-equiv="refresh">
Users do not expect a page to refresh automatically, and doing so will move focus back to the top of the page. This may
create a frustrating or confusing experience. Learn more about the refresh meta tag.

<object> elements have alternate text

Screen readers cannot translate non-text content. Adding alternate text to <object> elements helps screen readers convey
meaning to users. Learn more about alt text for object elements.

Select elements have associated label elements.
Form elements without effective labels can create frustrating experiences for screen reader users. Learn more about the
select element.

Skip links are focusable.
Including a skip link can help users skip to the main content to save time. Learn more about skip links.

No element has a [tabindex] value greater than 0
A value greater than 0 implies an explicit navigation ordering. Although technically valid, this often creates frustrating
experiences for users who rely on assistive technologies. Learn more about the tabindex attribute.

<th> elements and elements with [role="columnheader"/"rowheader"] have data cells they describe.

Screen readers have features to make navigating tables easier. Ensuring table headers always refer to some set of cells may
improve the experience for screen reader users. Learn more about table headers.

[lang] attributes have a valid value

Specifying a valid BCP 47 language on elements helps ensure that text is pronounced correctly by a screen reader. Learn how
to use the lang attribute.

<video> elements contain a <track> element with [kind="captions"]

When a video provides a caption it is easier for deaf and hearing impaired users to access its information. Learn more about
video captions.

96
Best Practices
GENERAL
Issues were logged in the Issues panel in Chrome Devtools
Issues logged to the Issues panel in Chrome Devtools indicate unresolved problems. They can come from network request
failures, insufficient security controls, and other browser concerns. Open up the Issues panel in Chrome DevTools for more
details on each issue.

Issue type
Content security policy

Missing source maps for large first-party JavaScript
Source maps translate minified code to the original source code. This helps developers debug in production. In addition,
Lighthouse is able to provide further insights. Consider deploying source maps to take advantage of these benefits. Learn
more about source maps.

URL

Map URL

localhost 1st Party
…

…

chunks/25a64_next_dist_compiled_f93ea3b1._.js (localhos

chunks/25a64_next_dist_compiled_f93ea3b1._.js.map (lo

t)

calhost)
Large JavaScript file is missing a source map
Error: Map has no `mappings` field

…chunks/25a64_next_dist_client_5a7dfb24._.js (localhost)

…
chunks/25a64_next_dist_client_5a7dfb24._.js.map (localh

URL

Map URL
ost)

Large JavaScript file is missing a source map
Error: Map has no `mappings` field

…chunks/src_compo…._.js (localhost)

…chunks/src_compo…._.js.map (localhost)

Error: Map has no `mappings` field

…chunks/src_components_a9cdd32f._.js (localhost)

…chunks/src_components_a9cdd32f._.js.map (localhost)

Error: Map has no `mappings` field

…
…chunks/node_modules__pnpm_f68b16af._.js (localhost)

chunks/node_modules__pnpm_f68b16af._.js.map (localh
ost)

Error: Map has no `mappings` field

…
…chunks/node_modules__pnpm_c0736287._.js (localhost)

chunks/node_modules__pnpm_c0736287._.js.map (localh
ost)

Error: Map has no `mappings` field

…

…

chunks/61dca_%40swc_helpers_cjs_e27e0aca._.js (localho

chunks/61dca_%40swc_helpers_cjs_e27e0aca._.js.map (l

st)

ocalhost)

Error: Map has no `mappings` field

…chunks/25a64_next_dist_881a9ee6._.js (localhost)

…chunks/25a64_next_dist_881a9ee6._.js.map (localhost)

Error: Map has no `mappings` field

…chunks/%5Bturbopack%5D_browser_dev_hmr-

…chunks/%5Bturbopack%5D_browser_dev_hmr-

client_hmr-client_ts….js (localhost)

client_hmr-client_t….map (localhost)

Error: Map has no `mappings` field

…chunks/_9e0c23ab._.js (localhost)
Error: Map has no `mappings` field

TRUST AND SAFETY
Ensure CSP is effective against XSS attacks

…chunks/_9e0c23ab._.js.map (localhost)

A strong Content Security Policy (CSP) significantly reduces the risk of cross-site scripting (XSS) attacks. Learn how to use a
CSP to prevent XSS

Description
Host allowlists can frequently be bypassed. Consider using CSP nonces or hashes
instead, along with `'strict-dynamic'` if necessary.
`'unsafe-inline'` allows the execution of unsafe in-page scripts and event handlers.
Consider using CSP nonces or hashes to allow scripts individually.
Avoid using plain wildcards (*) in this directive. Plain wildcards allow scripts to be
sourced from an unsafe domain.
Avoid using plain wildcards (*) in this directive. Plain wildcards allow scripts to be
sourced from an unsafe domain.
Avoid using plain URL schemes (data:) in this directive. Plain URL schemes allow
scripts to be sourced from an unsafe domain.

Directive

Severity

script-src

High

script-src

High

script-src

High

default-src

High

default-src

High

Use a strong HSTS policy
Deployment of the HSTS header significantly reduces the risk of downgrading HTTP connections and eavesdropping attacks.
A rollout in stages, starting with a low max-age is recommended. Learn more about using a strong HSTS policy.

Description

Directive

No HSTS header found

Severity
High

PASSED AUDITS (12)

Hide

Uses HTTPS
All sites should be protected with HTTPS, even ones that don't handle sensitive data. This includes avoiding mixed content,
where some resources are loaded over HTTP despite the initial request being served over HTTPS. HTTPS prevents intruders
from tampering with or passively listening in on the communications between your app and your users, and is a prerequisite
for HTTP/2 and many new web platform APIs. Learn more about HTTPS.

Avoids deprecated APIs
Deprecated APIs will eventually be removed from the browser. Learn more about deprecated APIs.

Avoids third-party cookies
Third-party cookies may be blocked in some contexts. Learn more about preparing for third-party cookie restrictions.

Allows users to paste into input fields
Preventing input pasting is a bad practice for the UX, and weakens security by blocking password managers.Learn more
about user-friendly input fields.

Avoids requesting the geolocation permission on page load
Users are mistrustful of or confused by sites that request their location without context. Consider tying the request to a user
action instead. Learn more about the geolocation permission.

Avoids requesting the notification permission on page load
Users are mistrustful of or confused by sites that request to send notifications without context. Consider tying the request to
user gestures instead. Learn more about responsibly getting permission for notifications.

Displays images with correct aspect ratio
Image display dimensions should match natural aspect ratio. Learn more about image aspect ratio.

Serves images with appropriate resolution
Image natural dimensions should be proportional to the display size and the pixel ratio to maximize image clarity. Learn how
to provide responsive images.

Has a <meta name="viewport"> tag with width or initial-scale
A <meta name="viewport"> not only optimizes your app for mobile screen sizes, but also prevents a 300 millisecond delay
to user input. Learn more about using the viewport meta tag.

Page has the HTML doctype
Specifying a doctype prevents the browser from switching to quirks-mode. Learn more about the doctype declaration.

Properly defines charset
A character encoding declaration is required. It can be done with a <meta> tag in the first 1024 bytes of the HTML or in the
Content-Type HTTP response header. Learn more about declaring the character encoding.

No browser errors logged to the console
Errors logged to the console indicate unresolved problems. They can come from network request failures and other browser
concerns. Learn more about this errors in console diagnostic audit

NOT APPLICABLE (5)

Hide

Redirects HTTP traffic to HTTPS
Make sure that you redirect all HTTP traffic to HTTPS in order to enable secure web features for all your users. Learn more.

Ensure proper origin isolation with COOP
The Cross-Origin-Opener-Policy (COOP) can be used to isolate the top-level window from other documents such as popups. Learn more about deploying the COOP header.

Mitigate clickjacking with XFO or CSP
The X-Frame-Options (XFO) header or the frame-ancestors directive in the Content-Security-Policy (CSP) header
control where a page can be embedded. These can mitigate clickjacking attacks by blocking some or all sites from
embedding the page. Learn more about mitigating clickjacking.

Document uses legible font sizes
Font sizes less than 12px are too small to be legible and require mobile visitors to “pinch to zoom” in order to read. Strive to
have >60% of page text ≥12px. Learn more about legible font sizes.

Detected JavaScript libraries
All front-end JavaScript libraries detected on the page. Learn more about this JavaScript library detection diagnostic audit.

100
SEO
These checks ensure that your page is following basic search engine
optimization advice. There are many additional factors Lighthouse does not

score here that may affect your search ranking, including performance on
Core Web Vitals. Learn more about Google Search Essentials.
ADDITIONAL ITEMS TO MANUALLY CHECK (1)

Hide

Structured data is valid
Run the Structured Data Testing Tool and the Structured Data Linter to validate structured data. Learn more about Structured
Data.

Run these additional validators on your site to check additional SEO best practices.

PASSED AUDITS (8)

Hide

Page isn’t blocked from indexing
Search engines are unable to include your pages in search results if they don't have permission to crawl them. Learn more
about crawler directives.

Document has a <title> element
The title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page
is relevant to their search. Learn more about document titles.

Document has a meta description
Meta descriptions may be included in search results to concisely summarize page content. Learn more about the meta
description.

Page has successful HTTP status code
Pages with unsuccessful HTTP status codes may not be indexed properly. Learn more about HTTP status codes.

Links have descriptive text
Descriptive link text helps search engines understand your content. Learn how to make links more accessible.

Links are crawlable
Search engines may use href attributes on links to crawl websites. Ensure that the href attribute of anchor elements links to
an appropriate destination, so more pages of the site can be discovered. Learn how to make links crawlable

Image elements have [alt] attributes
Informative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt
attribute. Learn more about the alt attribute.

Document has a valid hreflang
hreflang links tell search engines what version of a page they should list in search results for a given language or region.
Learn more about hreflang.

NOT APPLICABLE (2)

Hide

robots.txt is valid
If your robots.txt file is malformed, crawlers may not be able to understand how you want your website to be crawled or
indexed. Learn more about robots.txt.

Document has a valid rel=canonical
Canonical links suggest which URL to show in search results. Learn more about canonical links.

Captured at Aug 7, 2025, 3:00

Emulated Desktop with

PM PDT

Lighthouse 12.6.0

Initial page load

Custom throttling

Single page session
Using Chromium 138.0.0.0 with
devtools

Generated by Lighthouse 12.6.0 | File an issue

